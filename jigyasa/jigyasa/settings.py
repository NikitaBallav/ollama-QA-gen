"""
Django settings for jigyasa project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

print("I am in " + str(BASE_DIR))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-sym*i6d+*275y!9(b^%qffdmi3zi&&wgs@(p2w$5b5u!t_k4os'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0','192.168.13.87','10.152.2.137']


FILE_TO_URL_MAPPING = {
    'https://dggi.maharashtra.gov.in/compositeDistricts': [
        "Ranking and scores of all 36 districts.csv"
    ],
    'https://dggi.maharashtra.gov.in/sectorDistricts': [
        "sector ranking of Human Resource Development.csv",
        "sector ranking of Public Health.csv",
        "sector ranking of Citizen Centric Governance.csv",
        "sector ranking of Agriculture & Allied Sector.csv",
        "sector ranking of Commerce and Industry.csv",
        "sector ranking of Social Development.csv",
        "sector ranking of Environment.csv",
        "sector ranking of Public Infrastructure and Utilities.csv",
        "sector ranking of Economic Governance and Financial Inclusion.csv",
        "sector ranking of Judiciary and Public Safety.csv"
    ],
    'https://dggi.maharashtra.gov.in/methodologySectorIndicator': [
        "indicator_weightage of Social Development.csv",
        "indicator_weightage of Environment.csv",
        "indicator_weightage of Citizen Centric Governance.csv",
        "indicator_weightage of Human Resource Development.csv",
        "indicator_weightage of Public Health.csv",
        "indicator_weightage of Judiciary and Public Safety.csv",
        "indicator_weightage of Public Infrastructure and Utilities.csv",
        "indicator_weightage of Economic Governance and Financial Inclusion.csv",
        "indicator_weightage of Commerce and Industry.csv",
        "indicator_weightage of Agriculture & Allied Sector.csv"
    ],
    'https://dggi.maharashtra.gov.in/performanceAspirantDistricts': [
        "Aspirant Districts in Judiciary and Public Safety.csv",
        "Aspirant Districts in Environment.csv",
        "Aspirant Districts in Economic Governance and Financial Inclusion.csv",
        "Aspirant Districts in Human Resource Development.csv",
        "Aspirant Districts in Public Infrastructure and Utilities.csv",
        "Aspirant Districts in Public Health.csv",
        "Aspirant Districts in Social Development.csv",
        "Aspirant Districts in Commerce and Industry.csv",
        "Aspirant Districts in Agriculture & Allied Sector.csv",
        "Aspirant Districts in Citizen Centric Governance.csv"
    ],
    'https://dggi.maharashtra.gov.in/performanceOverview': [
        "Aspirant Districts.csv",
        "Achiever Districts.csv",
        "Performer Districts.csv"
    ],
    'https://dggi.maharashtra.gov.in/indicatorRanking': [
        "Indicator score of Environment sector.csv",
        "Indicator score of Judiciary & Public Safety sector.csv",
        "Indicator score of Economic Governance and Financial Inclusion sector.csv",
        "Indicator score of Social development sector.csv",
        "Indicator score of Public Infrastructure & Utilities sector.csv",
        "Indicator score of Public Health sector.csv",
        "indicator score of Human Resource Development sector.csv",
        "indicator score of Agriculture & Allied Sector.csv"
    ],
    'https://dggi.maharashtra.gov.in/methodologyRankingScore': [
        "Methodology for Computation of Ranks.pdf"
    ],
    'https://dggi.maharashtra.gov.in/aboutUs': [
        "Overview.pdf"
    ],
    'https://dggi.maharashtra.gov.in/assets/reports/report2023.pdf': [
        "dggi_report2023.pdf"
    ],
    'https://dggi.maharashtra.gov.in/ContactUs': [
        "Contact Us Details.pdf"
    ],
    'https://dggi.maharashtra.gov.in/disclaimer': [
        "Disclaimer.pdf"
    ],
    'https://dggi.maharashtra.gov.in/websitepolicy': [
        "Website Policies.pdf"
    ],
    'https://dggi.maharashtra.gov.in/WIM': [
        "Web Information Manager.pdf"
    ],
    'https://dggi.maharashtra.gov.in/terms-and-condition': [
        "Terms and conditions.pdf"
    ],
    'https://dggi.maharashtra.gov.in/performanceAchieverDistricts': [
        "Achiever Districts in Citizen Centric Governance.csv",
        "Achiever Districts in Public Infrastructure and Utilities.csv",
        "Achiever Districts in Commerce and Industry.csv",
        "Achiever Districts in Human Resource Development.csv",
        "Achiever Districts in Environment.csv",
        "Achiever Districts in Judiciary and Public Safety.csv",
        "Achiever Districts in Social Development.csv",
        "Achiever Districts in Economic Governance and Financial Inclusion.csv",
        "Achiever Districts in Agriculture & Allied Sector.csv",
        "Achiever Districts in Public Health.csv"
    ],
    'https://dggi.maharashtra.gov.in/performancePerformerDistricts': [
        "Performer Districts in Environment.csv",
        "Performer Districts in Social Development.csv",
        "Performer Districts in Commerce and Industry.csv",
        "Performer Districts in Citizen Centric Governance.csv",
        "Performer Districts in Agriculture & Allied Sector.csv",
        "Performer Districts in Human Resource Development.csv",
        "Performer Districts in Economic Governance and Financial Inclusion.csv",
        "Performer Districts in Public Health.csv",
        "Performer Districts in Public Infrastructure and Utilities.csv",
        "Performer Districts in Judiciary and Public Safety.csv"
    ]
}


FILE_TO_URL_MAPPING11 = {'news_updates_v1.csv': 'https://maharashtra.nic.in/news-update/',
'Nic.docx': 'https://maharashtra.nic.in/',
'districts.docx': 'https://maharashtra.nic.in/district-centres/',
'events_v1.csv': 'https://maharashtra.nic.in/events/',
'services.docx': 'https://maharashtra.nic.in/services/',
'photo_gallery.docx': 'https://maharashtra.nic.in/photo-gallery/',
'video_gallery.docx': 'https://maharashtra.nic.in/video-gallery/',
'Screen Reader Information.csv': 'https://maharashtra.nic.in/help/',
 'Plug-in for alternate document types.csv': 'https://maharashtra.nic.in/help/',
'SIO (State Informatics Officer).csv': 'https://maharashtra.nic.in/directory/',
 'Maharashtra State Centre, Mumbai.csv': 'https://maharashtra.nic.in/directory/',
 'Ahmadnagar.csv': 'https://maharashtra.nic.in/directory/',
 'Akola.csv': 'https://maharashtra.nic.in/directory/',
 'Amravati.csv': 'https://maharashtra.nic.in/directory/',
 'Aurangabad.csv': 'https://maharashtra.nic.in/directory/',
 'Beed.csv': 'https://maharashtra.nic.in/directory/',
 'Bhandara.csv': 'https://maharashtra.nic.in/directory/',
 'Buldana.csv': 'https://maharashtra.nic.in/directory/',
 'Chandrapur.csv': 'https://maharashtra.nic.in/directory/',
 'Dhule.csv': 'https://maharashtra.nic.in/directory/',
'District Centres (final test).csv': 'https://maharashtra.nic.in/district-centres/',
 'Gadchiroli.csv': 'https://maharashtra.nic.in/directory/',
 'Gondia.csv': 'https://maharashtra.nic.in/directory/',
 'Hingoli.csv': 'https://maharashtra.nic.in/directory/',
 'Jalgaon.csv': 'https://maharashtra.nic.in/directory/',
 'Jalna.csv': 'https://maharashtra.nic.in/directory/',
 'Kolhapur.csv': 'https://maharashtra.nic.in/directory/',
 'Mumbai.csv': 'https://maharashtra.nic.in/directory/',
 'Mumbai Suburban (Bandra).csv': 'https://maharashtra.nic.in/directory/',
 'Nagpur.csv': 'https://maharashtra.nic.in/directory/',
 'Nanded.csv': 'https://maharashtra.nic.in/directory/',
 'Nandurbar.csv': 'https://maharashtra.nic.in/directory/',
 'Nasik.csv': 'https://maharashtra.nic.in/directory/',
 'Osmanabad.csv': 'https://maharashtra.nic.in/directory/',
 'Palghar.csv': 'https://maharashtra.nic.in/directory/',
 'Parbhani.csv': 'https://maharashtra.nic.in/directory/',
 'Pune District.csv': 'https://maharashtra.nic.in/directory/',
'Reporting_officer.csv': 'https://maharashtra.nic.in/organization-structure/',
 'Raigad.csv': 'https://maharashtra.nic.in/directory/',
 'Ratnagiri.csv': 'https://maharashtra.nic.in/directory/',
 'Sangli.csv': 'https://maharashtra.nic.in/directory/',
 'Satara.csv': 'https://maharashtra.nic.in/directory/',
 'Sindhu Durg.csv': 'https://maharashtra.nic.in/directory/',
 'Solapur.csv': 'https://maharashtra.nic.in/directory/',
 'Thane.csv': 'https://maharashtra.nic.in/directory/',
 'Wardha.csv': 'https://maharashtra.nic.in/directory/',
 'Washim.csv': 'https://maharashtra.nic.in/directory/',
 'Yavatmal.csv': 'https://maharashtra.nic.in/directory/',
 'APPELLATE AUTHORITY.csv': 'https://maharashtra.nic.in/rti/',
 'PUBLIC INFORMATION OFFICERS ( PIO ).csv': 'https://maharashtra.nic.in/rti/'}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'jigyasa_chatbot',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'jigyasa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jigyasa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


from llama_index.core.postprocessor import SentenceTransformerRerank
from llama_index.core import SimpleDirectoryReader
from llama_index.core import VectorStoreIndex
from llama_index.llms.ollama import Ollama
from llama_index.embeddings.huggingface import HuggingFaceEmbedding
from llama_index.core import Settings
from llama_index.readers.web import SimpleWebPageReader
from llama_index.readers.file import (
    DocxReader,
    HWPReader,
    PDFReader,
    EpubReader,
    FlatReader,
    HTMLTagReader,
    ImageCaptionReader,
    ImageReader,
    ImageVisionLLMReader,
    IPYNBReader,
    MarkdownReader,
    MboxReader,
    PptxReader,
    PandasCSVReader,
    VideoAudioReader,
    UnstructuredReader,
    PyMuPDFReader,
    ImageTabularChartReader,
    XMLReader,
    PagedCSVReader,
    CSVReader,
    RTFReader,
)
from llama_index.core import (
    load_index_from_storage,
    StorageContext,
)

Settings.llm = Ollama(model="llama3", temperature=0, request_timeout=500.0)
Settings.embed_model = HuggingFaceEmbedding(model_name="Alibaba-NLP/gte-large-en-v1.5", trust_remote_code=True)
        #persist_dir = "/content/combine_index"
#persist_dir = "C:\\Users\\USER\\Desktop\\LLM_Chatbot\\ollama-QA-gen\\chat_url\\combined_index  C:\Users\USER\Desktop\LLM_Chatbot\ollama-QA-gen\chat_url\combined_index_latest"

persist_dir11 = "C:\\Users\\USER\\Desktop\\LLM_Chatbot\\ollama-QA-gen\\chat_url\\combined_index_latest\\"

persist_dir = "C:\\Users\\USER\\Desktop\\LLM_Chatbot\\ollama-QA-gen\\DGGI\\dggi_index_v1\\"


storage_context = StorageContext.from_defaults(persist_dir=persist_dir)
INDEX_INSTANCE = load_index_from_storage(storage_context)

rerank = SentenceTransformerRerank(model="BAAI/bge-reranker-large", top_n=7)



from llama_index.core.storage.chat_store import SimpleChatStore
from llama_index.core.memory import ChatMemoryBuffer

# Load the chat store from the file
'''
loaded_chat_store1 = SimpleChatStore.from_persist_path(
    persist_path="C:\\Users\\USER\\Desktop\\LLM_Chatbot\\ollama-QA-gen\\chat_url\\chat_store_v2.pkl"
)
'''

chat_store_to_be_saved = SimpleChatStore()

chat_memory1 = ChatMemoryBuffer.from_defaults(
    token_limit=30000,
    chat_store=chat_store_to_be_saved,
    chat_store_key="user1",

)


# Initialize the chat engine
CHAT_ENGINE = INDEX_INSTANCE.as_chat_engine(
    chat_mode="context",
    system_prompt="You are a helpful AI assistant. You are expert in retrieving the answer for the user input based on the provided context. Important note: You must not mention any file name or file path in your response.",
    memory=chat_memory1, verbose = True,similarity_top_k=10, node_postprocessors=[rerank]
)




#QUERY_ENGINE = INDEX_INSTANCE.as_query_engine(similarity_top_k=3, node_postprocessors=[rerank])


